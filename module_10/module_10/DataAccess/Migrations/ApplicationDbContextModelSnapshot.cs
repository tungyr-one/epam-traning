// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DataAccess.LectureDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Lectures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2021, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Physics",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2021, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Chemistry",
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2021, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "History",
                            ProfessorId = 3
                        });
                });

            modelBuilder.Entity("DataAccess.Models.StudentAttendanceDb", b =>
                {
                    b.Property<int>("LectureId")
                        .HasColumnType("integer");

                    b.Property<int>("StudentId")
                        .HasColumnType("integer");

                    b.Property<int>("HomeworkMark")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPresent")
                        .HasColumnType("boolean");

                    b.HasKey("LectureId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentAttendances");

                    b.HasData(
                        new
                        {
                            LectureId = 1,
                            StudentId = 1,
                            HomeworkMark = 5,
                            IsPresent = true
                        },
                        new
                        {
                            LectureId = 1,
                            StudentId = 2,
                            HomeworkMark = 0,
                            IsPresent = true
                        },
                        new
                        {
                            LectureId = 1,
                            StudentId = 3,
                            HomeworkMark = 0,
                            IsPresent = false
                        },
                        new
                        {
                            LectureId = 2,
                            StudentId = 1,
                            HomeworkMark = 4,
                            IsPresent = true
                        },
                        new
                        {
                            LectureId = 2,
                            StudentId = 2,
                            HomeworkMark = 0,
                            IsPresent = false
                        },
                        new
                        {
                            LectureId = 2,
                            StudentId = 3,
                            HomeworkMark = 3,
                            IsPresent = true
                        },
                        new
                        {
                            LectureId = 3,
                            StudentId = 1,
                            HomeworkMark = 0,
                            IsPresent = false
                        },
                        new
                        {
                            LectureId = 3,
                            StudentId = 2,
                            HomeworkMark = 4,
                            IsPresent = true
                        },
                        new
                        {
                            LectureId = 3,
                            StudentId = 3,
                            HomeworkMark = 0,
                            IsPresent = false
                        });
                });

            modelBuilder.Entity("DataAccess.ProfessorDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Professors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "a.einstein@university.com",
                            Name = "Albert Einstein"
                        },
                        new
                        {
                            Id = 2,
                            Email = "d.mendeleev@university.com",
                            Name = "Dmitrii Mendeleev"
                        },
                        new
                        {
                            Id = 3,
                            Email = "a.popov@university.com",
                            Name = "Aleksandr Popov"
                        });
                });

            modelBuilder.Entity("DataAccess.StudentDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 18,
                            Email = "v.pupkin@university.com",
                            Name = "Vasya Pupkin",
                            Phone = "89543876435"
                        },
                        new
                        {
                            Id = 2,
                            Age = 19,
                            Email = "i.ivanov@university.com",
                            Name = "Ivan Ivanov",
                            Phone = "89253781286"
                        },
                        new
                        {
                            Id = 3,
                            Age = 20,
                            Email = "s.sidorov@university.com",
                            Name = "Sergei Sidorov",
                            Phone = "89115732138"
                        });
                });

            modelBuilder.Entity("DataAccess.LectureDb", b =>
                {
                    b.HasOne("DataAccess.ProfessorDb", "Professor")
                        .WithMany("Lectures")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("DataAccess.Models.StudentAttendanceDb", b =>
                {
                    b.HasOne("DataAccess.LectureDb", "Lecture")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("LectureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.StudentDb", "Student")
                        .WithMany("StudentAttendances")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecture");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("DataAccess.LectureDb", b =>
                {
                    b.Navigation("StudentAttendances");
                });

            modelBuilder.Entity("DataAccess.ProfessorDb", b =>
                {
                    b.Navigation("Lectures");
                });

            modelBuilder.Entity("DataAccess.StudentDb", b =>
                {
                    b.Navigation("StudentAttendances");
                });
#pragma warning restore 612, 618
        }
    }
}
